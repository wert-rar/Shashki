Техническое задание:

Необходимо написать сервер на flask реализующий игровую логику.(+)
Сервер должен обрабатывать два запроса: (+)
1 /board : должен вернуть board.html (+)
2 /move : должен вернуть data в формате json (+)

Более подробное описание запросов:

/board
Ничего не передается, нужно просто вывести html файл

/move
На сервер передается json вида {status_: str, pieces: pieces}

status_ - конкретное состояние игры (кто ходит)
status_ может принимать следующие значения
w1: "Ход белых",
b1: "Ход черных",
w2: "Нельзя двигать фигуру, сейчас ход белых",
b2: "Нельзя двигать фигуру, сейчас ход черных",
w3: "Победили белые",
b3: "Победили черные",
w4:"Белые продолжают ход",
b4:"Черные продолжают ход",
e1:"Ошибка при запросе к серверу"

pieces содержит в себе информацию о фигурах,
элемент массива имеет вид:
{ 
    color: 1, - цвет фигуры 1 - черные 0 - белые
    x: 1, - позиция шашки по ширине доски
    y: 0, - позиция шашки по длине доски
    mode: "p" - вариант шашки ( p - пешка q - королева)
}

Сервер должен обработать полученные данные (то есть решить, возможен ли такой ход в соответствии с правилами)
сохранить полученное положение фигур и статус если ход был совершен верно иначе изменяется только статус
После чего сервер должен отправить обратно json объект вида {status_: str, pieces: pieces}
где status_ - новый статус  игры, который определяется согласно правилам*
а pieces новое положение фигур 
элемент массива имеет вид:
{ 
    color: 1, - цвет фигуры 1 - черные 0 - белые
    x: 1, - позиция шашки по ширине доски
    y: 0, - позиция шашки по длине доски
    mode: "p" - вариант шашки ( p - пешка q - королева)
}

*правила 
если при ходе белых не была съедена фигура то ходят черные и наоборот (+)
если при ходе белых была съедена фигура то ходят снова белые и наоборот (+)
если ход неверен или во время хода черных была сдвинута белая фигура то возвращается b2 и w2 в обратном случае (+)
если остались только фигуры белых то белые выиграли и наоборот (+)
если возникла Ошибка то возвращается e1 (+)

